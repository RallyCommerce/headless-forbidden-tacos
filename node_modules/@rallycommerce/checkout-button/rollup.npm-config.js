import summary from 'rollup-plugin-summary';
import { terser } from 'rollup-plugin-terser';
import replace from '@rollup/plugin-replace';
import typescript from '@rollup/plugin-typescript';
import minifyHTML from 'rollup-plugin-minify-html-literals';
import del from 'rollup-plugin-delete';
import babel from '@rollup/plugin-babel';
import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';

export default {
  input: 'src/index.ts',
  output: [
    {
      name: 'RallyCheckoutButton',
      file: `build/index.umd.js`,
      format: 'umd'
    },
    {
      file: `build/index.cjs.js`,
      format: 'cjs'
    },
    {
      file: `build/index.esm.js`,
      format: 'es'
    }
  ],
  onwarn(warning) {
    if (warning.code !== 'THIS_IS_UNDEFINED') {
      console.error(`(!) ${warning.message}`);
    }
  },
  plugins: [
    del({ targets: 'build/*' }),
    replace({
      'Reflect.decorate': 'undefined',
      ENV_NAME: JSON.stringify(process.env.configuration),
      preventAssignment: true
    }),
    resolve(),
    commonjs(),
    typescript({
      tsconfig: './tsconfig.json',
      sourceMap: false,
      declarationDir: './'
    }),
    babel({
      babelHelpers: 'bundled',
      exclude: ['node_modules/**']
    }),
    minifyHTML(),
    terser({
      format: {
        comments: false,
      },
    }),
    summary(),
  ],
  preserveEntrySignatures: 'strict',
};
