import { Config, CartData, CustomerData } from './checkout-session/checkout-session.service';
declare global {
    interface Window {
        Rally: GlobalObject;
    }
}
declare class SDKService {
    constructor();
    addInitFunction(globalInit: (key: string, config: Config) => void): void;
    addRefreshCheckoutSession(globalRefreshCheckoutSession: (cartData: CartData, cb?: (data: {
        url: string | null;
    }) => void) => void): void;
    addApplyCartData(globalApplyCartData: (cartData: CartData) => void): void;
    addUpdateConfig(globalUpdateConfig: (config?: Config) => void): void;
    addApplyCustomerData(globalApplyCustomerData: (customerData: any) => void): void;
    private createGlobalObject;
}
export interface GlobalObject {
    init: (key: string, config: Config) => void;
    refreshCheckoutSession: (cartData: CartData, cb: (data: {
        url: string | null;
    }) => void) => void;
    applyCartData: (cartData: CartData) => void;
    applyCustomerData: (customerData: CustomerData) => void;
    updateConfig: (config?: Config) => void;
    platform: {
        getCart?: any;
        getCartId?: any;
    };
}
export declare const sdk: SDKService;
export {};
//# sourceMappingURL=sdk.service.d.ts.map