import fs from 'fs';
import childProcess from 'child_process';
import path, { dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const npmScripts = ['install', 'start', 'pack', 'publish'];
const packageJson = JSON.parse(fs.readFileSync(path.join(__dirname, `package.json`)));

const npmRun = (command) => {
  return new Promise((resolve, reject) => {
    command = npmScripts.includes(command) ? [command] : ['run', command];
    const newNpm = childProcess.spawn('npm', command, { stdio: 'inherit' });
    newNpm.on('close', resolve);
    newNpm.on('error', reject);
  });
};

npmRun('pack').then(() => {
  const packageBaseName = packageJson.name.replace('@', '').replace('/', '-');
  if (!fs.existsSync(path.join(__dirname, 'package'))) {
    fs.mkdirSync(path.join(__dirname, 'package'));
  }
  fs.renameSync(path.join(__dirname, `${packageBaseName}-${packageJson.version}.tgz`), path.join(__dirname, `package/${packageBaseName}.tgz`));
});
